#!/bin/bash

clear



# gwak 数据字段和记录变量

# FIELDWIDTHS  已空格分隔数字列表，用空格定义每个数据字段的精确宽度
# FS  输入字段分隔符
# RS  输入记录分隔符
# OFS 输出字段分隔符
# ORS 输出记录分隔符


# FS OFS 定义gawk处理在数据流中处理数据字段的方式
gawk 'BEGIN{FS=","; OFS="---"} {print $1,$2,$3}' data1

# FIELDWIDTHS 变量允许不使用字段分隔符读取记录
# 在某些程序中，数据不使用字段分隔符号，而是被放置在特定的列中；此时必须设置 FIELDWIDTHS 变量已匹配记录中的数据布局
# 设置FIELDWIDTHS 后，gawk忽略FS并基于提供的字段宽度计算数据字段
# FIELDWIDTHS 设置后其值必须是常量
gawk 'BEGIN{FIELDWIDTHS="2 3 1 2"} {print $1,$2,$3,$4}' data1

echo
# RS ORS 变量定义gawk程序处理数据流中记录的方式
# 默认情况下，gawk 将RS ORS变量设置为换行符
# 默认RS变量值表示输入数据流中文本的每一个新行为一条记录
# 但是有时数据分布在不同的行上，gawk 还是把每一行作为一个单独的记录处理

# 要解决这个问题，将RS变量设置为空字符串，然后再数据流的数据记录之间保留一个空行，gawk会将每个空行解析为记录分隔符
gawk 'BEGIN{FS="\n"; RS=""} {print $1,$2}' data2


echo
# 除了字段和记录的分隔符之外 gawk还提供了其他一些内置变量
# 这些变量有助于了解数据处理进行的状况和从shell环境中提取信息

# ARGC 出现的命令行参数的个数
# ARGIND 当前正在处理的文件在ARGV中的索引
# ARGV 命令行参数数组
# CONVFMT 数字的转换格式
# ENVIRON 当前shell环境变量及其值得关联数组
# ERRNO 当读取或关闭输入文件时发生错误时的系统错误
# FILENAME 用于输入到gawk 程序的数据文件的文件名
# FNR 数据文件的当前记录号
# IGNORECASE 如果设置为非0，则忽略字符串中的大小写
# NF 数据文件中的字段个数
# NR 已处理的输入记录个数
# OFMT 显示数字的输出格式
# RLENGTH 匹配函数中匹配上的字符串长度
# RSTART 匹配函数中匹配上的子字符串的开始索引






































